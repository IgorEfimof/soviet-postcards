document.addEventListener("DOMContentLoaded", () => {
  const checkoutList = document.getElementById("checkout-list");
  const checkoutTotal = document.getElementById("checkout-total");
  const confirmOrderButton = document.getElementById("confirm-order");
  const checkoutDebug = document.createElement("div");
  checkoutDebug.style.color = "red";
  checkoutDebug.style.fontSize = "14px";
  document.body.appendChild(checkoutDebug);

  const contactForm = document.getElementById("contact-form");
  const clientNameInput = document.getElementById("client-name");
  const clientPhoneInput = document.getElementById("client-phone");
  const clientEmailInput = document.getElementById("client-email");

  const TELEGRAM_BOT_TOKEN = "7549512928:AAG4ChQzTDH9c5zzo2D1KofIKtekwqNM4bg";
  const TELEGRAM_CHAT_ID = "5059431264";

  function getCart() {
    try {
      const cart = JSON.parse(localStorage.getItem("cart")) || [];
      return cart;
    } catch (error) {
      checkoutDebug.textContent = "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ –∫–æ—Ä–∑–∏–Ω—ã –∏–∑ localStorage.";
      return [];
    }
  }

  function renderCheckout() {
    const cart = getCart();
    checkoutList.innerHTML = "";
    let total = 0;

    if (cart.length === 0) {
      checkoutList.innerHTML = "<p>‚ùå –í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞ –∏–ª–∏ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–∞. –î–æ–±–∞–≤—å—Ç–µ —Ç–æ–≤–∞—Ä—ã –∑–∞–Ω–æ–≤–æ.</p>";
      checkoutDebug.textContent = "üõí –ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞.";
      return;
    }

    cart.forEach((item) => {
      const price = parseFloat(item.price) || 0;
      const quantity = parseInt(item.quantity) || 1;
      const itemTotal = price * quantity;

      const li = document.createElement("li");
      li.className = "cart-item";
      li.innerHTML = \`
        <img src="\${item.image || '#'}" alt="\${item.title}" class="cart-item-image"/>
        <div class="item-info">
          <strong>\${item.title || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è'}</strong>
          <p>–¶–µ–Ω–∞: \${price} ‚ÇΩ</p>
          <p>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: \${quantity}</p>
          <p>–°—É–º–º–∞: \${itemTotal.toFixed(2)} ‚ÇΩ</p>
        </div>
      \`;
      checkoutList.appendChild(li);
      total += itemTotal;
    });

    checkoutTotal.textContent = total.toFixed(2);
    checkoutDebug.textContent = "‚úÖ –ö–æ—Ä–∑–∏–Ω–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞: " + cart.length + " —Ç–æ–≤–∞—Ä–æ–≤.";
  }

  async function sendTextToTelegram(message) {
    const url = \`https://api.telegram.org/bot\${TELEGRAM_BOT_TOKEN}/sendMessage\`;
    try {
      const response = await fetch(url, {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({
          chat_id: TELEGRAM_CHAT_ID,
          text: message,
          parse_mode: "HTML"
        }),
      });
      if (!response.ok) throw new Error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç–µ–∫—Å—Ç–∞");
    } catch (error) {
      checkoutDebug.textContent = "‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç–µ–∫—Å—Ç–∞ –≤ Telegram.";
    }
  }

  async function sendPhotoToTelegram(photoUrl, caption) {
    const url = \`https://api.telegram.org/bot\${TELEGRAM_BOT_TOKEN}/sendPhoto\`;
    if (!photoUrl || !photoUrl.startsWith("http")) {
      checkoutDebug.textContent = "‚ö†Ô∏è –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è.";
      return;
    }

    try {
      const response = await fetch(url, {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({
          chat_id: TELEGRAM_CHAT_ID,
          photo: photoUrl,
          caption: caption,
        }),
      });
      const responseData = await response.json();
      if (!response.ok) throw new Error(\`–û—à–∏–±–∫–∞: \${responseData.description}\`);
    } catch (error) {
      checkoutDebug.textContent = "‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ç–æ –≤ Telegram.";
    }
  }

  confirmOrderButton.addEventListener("click", async (event) => {
    event.preventDefault();

    const cart = getCart();
    if (cart.length === 0) {
      alert("‚ùå –í–∞—à –∑–∞–∫–∞–∑ –ø—É—Å—Ç.");
      checkoutDebug.textContent = "‚ùå –ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏.";
      return;
    }

    if (!contactForm.checkValidity()) {
      alert("‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è —Ñ–æ—Ä–º—ã.");
      return;
    }

    const clientData = {
      name: clientNameInput.value.trim(),
      phone: clientPhoneInput.value.trim(),
      email: clientEmailInput.value.trim(),
    };

    let total = 0;
    const itemLines = cart.map((item) => {
      const price = parseFloat(item.price) || 0;
      const quantity = parseInt(item.quantity) || 1;
      const sum = price * quantity;
      total += sum;
      return \`- \${item.title || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è'} (\${quantity} x \${price} ‚ÇΩ): \${sum.toFixed(2)} ‚ÇΩ\`;
    });

    const message = [
      "üõí <b>–ù–æ–≤—ã–π –∑–∞–∫–∞–∑</b>",
      \`üë§ –ò–º—è: \${clientData.name}\`,
      \`üìû –¢–µ–ª–µ—Ñ–æ–Ω: \${clientData.phone}\`,
      \`üìß Email: \${clientData.email}\`,
      \`üí∞ –°—É–º–º–∞ –∑–∞–∫–∞–∑–∞: \${total.toFixed(2)} ‚ÇΩ\`,
      "",
      "üì¶ <b>–¢–æ–≤–∞—Ä—ã:</b>",
      ...itemLines
    ].join("\n");

    await sendTextToTelegram(message);

    for (const item of cart) {
      const price = parseFloat(item.price) || 0;
      const quantity = parseInt(item.quantity) || 1;
      const sum = price * quantity;
      const caption = \`\${item.title || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è'}\n–¶–µ–Ω–∞: \${price} ‚ÇΩ\n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: \${quantity}\n–°—É–º–º–∞: \${sum.toFixed(2)} ‚ÇΩ\`;

      let absoluteImageUrl = "";
      if (item.image && item.image.startsWith("http")) {
        absoluteImageUrl = item.image;
      } else if (item.image) {
        absoluteImageUrl = \`\${window.location.origin}/\${item.image.replace(/^\.?\/*/, "")}\`;
      }

      if (absoluteImageUrl) {
        await sendPhotoToTelegram(absoluteImageUrl, caption);
      }
    }

    localStorage.removeItem("cart");
    window.location.href = "thank-you.html";
  });

  renderCheckout();
});
